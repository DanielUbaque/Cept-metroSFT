Cept

#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <SPI.h>
#include <SD.h>

const int chipSelect = 10;  // CS conectado al pin 10
const int buttonPin = 2;    // Pin conectado al botón
const int analogPin = A0;   // Pin analógico para leer el voltaje

LiquidCrystal_I2C lcd(0x27, 16, 2);
bool sdInitialized = false;
unsigned long lastInteractionTime = 0;
bool displayShouldBeOff = false;
unsigned long lastSDCheckTime = 0;  // Time of the last SD card check
bool firstButtonPressed = false;  // Flag to track if the button has been pressed at least once

void setup() {
 pinMode(buttonPin, INPUT_PULLUP);
 lcd.init();
 lcd.backlight();
 Serial.begin(9600);
 lcd.print("Presione boton");
}

void loop() {
 static bool buttonPressed = false;

 if (digitalRead(buttonPin) == LOW && !buttonPressed) {
   buttonPressed = true;d
   firstButtonPressed = true;  // Ensure that we have marked the button as pressed
   handleButtonPress();
 } else if (digitalRead(buttonPin) == HIGH) {
   buttonPressed = false;
 }

 // Retry initializing SD card every 5 seconds if not initialized and button has been pressed once
 if (!sdInitialized && firstButtonPressed && (millis() - lastSDCheckTime > 5000)) {
   lcd.clear();
   lcd.print("Reconectando SD...");
   Serial.println("Reconnecting SD card...");
   if (initializeSD()) {
     lcd.clear();
     float voltage = readVoltage();  // Read voltage immediately after successful SD connection
     displayVoltage(voltage);        // Display and log voltage
     logVoltage(voltage);
     displayShouldBeOff = true;      // Set flag to turn off the display after showing the voltage
     lastInteractionTime = millis();
   }
   lastSDCheckTime = millis();
 }

 // Automatically turn off the display after 5 seconds if enabled
 if (displayShouldBeOff && millis() - lastInteractionTime > 5000) {
   lcd.noBacklight();
   displayShouldBeOff = false;
 }
}

void handleButtonPress() {
 lcd.backlight();
 lcd.clear();

 if (!sdInitialized && !initializeSD()) {
   lcd.print("Reconectando SD...");
   Serial.println("Reconnecting SD card...");
   lastSDCheckTime = millis();  // Ensure we retry soon
   return;
 }

 float voltage = readVoltage();
 displayVoltage(voltage);
 logVoltage(voltage);

 lastInteractionTime = millis();
 displayShouldBeOff = true;
}

bool initializeSD() {
 sdInitialized = SD.begin(chipSelect);
 if (sdInitialized) {
   Serial.println("SD card initialized successfully.");
   return true;
 } else {
   Serial.println("Failed to initialize SD card. Will retry...");
   return false;
 }
}

void displayVoltage(float voltage) {
 lcd.print("Voltaje: ");
 lcd.print(voltage, 2);
 lcd.print(" V");
 Serial.print("Measured Voltage: ");
 Serial.println(voltage);
}

float readVoltage() {
 return analogRead(analogPin) * (5.0 / 1023.0);
}

bool logVoltage(float voltage) {
 if (sdInitialized) {
   File file = SD.open("voltage.csv", FILE_WRITE);
   if (file) {
     file.println(voltage);
     file.close();
     Serial.println("Voltage logged successfully.");
     return true;
   } else {
     Serial.println("Error opening voltage.csv");
     sdInitialized = false; // Mark SD as uninitialized if file fails to open
     return false;
   }
 }
 return false;
}
